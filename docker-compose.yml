version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: vpbank_postgres
    environment:
      POSTGRES_DB: vpbank_collateral
      POSTGRES_USER: vpbank_user
      POSTGRES_PASSWORD: vpbank_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - vpbank_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vpbank_backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://vpbank_user:vpbank_password@postgres:5432/vpbank_collateral
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - vpbank_network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vpbank_frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - vpbank_network
    command: npm run dev

  # Nginx (for production)
  nginx:
    image: nginx:alpine
    container_name: vpbank_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - vpbank_network
    profiles:
      - production

volumes:
  postgres_data:

networks:
  vpbank_network:
    driver: bridge